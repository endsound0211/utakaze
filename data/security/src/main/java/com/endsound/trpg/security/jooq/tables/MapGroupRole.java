/*
 * This file is generated by jOOQ.
 */
package com.endsound.trpg.security.jooq.tables;


import com.endsound.trpg.security.jooq.Indexes;
import com.endsound.trpg.security.jooq.Keys;
import com.endsound.trpg.security.jooq.Utakaze;
import com.endsound.trpg.security.jooq.tables.records.MapGroupRoleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MapGroupRole extends TableImpl<MapGroupRoleRecord> {

    private static final long serialVersionUID = -651190997;

    /**
     * The reference instance of <code>utakaze.map_group_role</code>
     */
    public static final MapGroupRole MAP_GROUP_ROLE = new MapGroupRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MapGroupRoleRecord> getRecordType() {
        return MapGroupRoleRecord.class;
    }

    /**
     * The column <code>utakaze.map_group_role.group_id</code>.
     */
    public final TableField<MapGroupRoleRecord, Integer> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>utakaze.map_group_role.role_id</code>.
     */
    public final TableField<MapGroupRoleRecord, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>utakaze.map_group_role</code> table reference
     */
    public MapGroupRole() {
        this(DSL.name("map_group_role"), null);
    }

    /**
     * Create an aliased <code>utakaze.map_group_role</code> table reference
     */
    public MapGroupRole(String alias) {
        this(DSL.name(alias), MAP_GROUP_ROLE);
    }

    /**
     * Create an aliased <code>utakaze.map_group_role</code> table reference
     */
    public MapGroupRole(Name alias) {
        this(alias, MAP_GROUP_ROLE);
    }

    private MapGroupRole(Name alias, Table<MapGroupRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private MapGroupRole(Name alias, Table<MapGroupRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MapGroupRole(Table<O> child, ForeignKey<O, MapGroupRoleRecord> key) {
        super(child, key, MAP_GROUP_ROLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Utakaze.UTAKAZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MAP_GROUP_ROLE_IDX_MAP_GROUP_ROLE, Indexes.MAP_GROUP_ROLE_IDX_MAP_GROUP_ROLE_0, Indexes.MAP_GROUP_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MapGroupRoleRecord> getPrimaryKey() {
        return Keys.KEY_MAP_GROUP_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MapGroupRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<MapGroupRoleRecord>>asList(Keys.KEY_MAP_GROUP_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MapGroupRoleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MapGroupRoleRecord, ?>>asList(Keys.FK_MAP_GROUP_ROLE_GROUP, Keys.FK_MAP_GROUP_ROLE_ROLE);
    }

    public Group group() {
        return new Group(this, Keys.FK_MAP_GROUP_ROLE_GROUP);
    }

    public Role role() {
        return new Role(this, Keys.FK_MAP_GROUP_ROLE_ROLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapGroupRole as(String alias) {
        return new MapGroupRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MapGroupRole as(Name alias) {
        return new MapGroupRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MapGroupRole rename(String name) {
        return new MapGroupRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MapGroupRole rename(Name name) {
        return new MapGroupRole(name, null);
    }
}
