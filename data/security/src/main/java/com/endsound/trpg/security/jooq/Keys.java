/*
 * This file is generated by jOOQ.
 */
package com.endsound.trpg.security.jooq;


import com.endsound.trpg.security.jooq.tables.Group;
import com.endsound.trpg.security.jooq.tables.MapGroupRole;
import com.endsound.trpg.security.jooq.tables.MapUserGroup;
import com.endsound.trpg.security.jooq.tables.Role;
import com.endsound.trpg.security.jooq.tables.User;
import com.endsound.trpg.security.jooq.tables.records.GroupRecord;
import com.endsound.trpg.security.jooq.tables.records.MapGroupRoleRecord;
import com.endsound.trpg.security.jooq.tables.records.MapUserGroupRecord;
import com.endsound.trpg.security.jooq.tables.records.RoleRecord;
import com.endsound.trpg.security.jooq.tables.records.UserRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>utakaze</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<GroupRecord, Integer> IDENTITY_GROUP = Identities0.IDENTITY_GROUP;
    public static final Identity<RoleRecord, Integer> IDENTITY_ROLE = Identities0.IDENTITY_ROLE;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<GroupRecord> KEY_GROUP_PRIMARY = UniqueKeys0.KEY_GROUP_PRIMARY;
    public static final UniqueKey<MapGroupRoleRecord> KEY_MAP_GROUP_ROLE_PRIMARY = UniqueKeys0.KEY_MAP_GROUP_ROLE_PRIMARY;
    public static final UniqueKey<MapUserGroupRecord> KEY_MAP_USER_GROUP_PRIMARY = UniqueKeys0.KEY_MAP_USER_GROUP_PRIMARY;
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = UniqueKeys0.KEY_ROLE_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_IDX_USER = UniqueKeys0.KEY_USER_IDX_USER;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<MapGroupRoleRecord, GroupRecord> FK_MAP_GROUP_ROLE_GROUP = ForeignKeys0.FK_MAP_GROUP_ROLE_GROUP;
    public static final ForeignKey<MapGroupRoleRecord, RoleRecord> FK_MAP_GROUP_ROLE_ROLE = ForeignKeys0.FK_MAP_GROUP_ROLE_ROLE;
    public static final ForeignKey<MapUserGroupRecord, UserRecord> FK_MAP_USER_GROUP_USER = ForeignKeys0.FK_MAP_USER_GROUP_USER;
    public static final ForeignKey<MapUserGroupRecord, GroupRecord> FK_MAP_USER_GROUP_GROUP = ForeignKeys0.FK_MAP_USER_GROUP_GROUP;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<GroupRecord, Integer> IDENTITY_GROUP = Internal.createIdentity(Group.GROUP, Group.GROUP.ID);
        public static Identity<RoleRecord, Integer> IDENTITY_ROLE = Internal.createIdentity(Role.ROLE, Role.ROLE.ID);
        public static Identity<UserRecord, Integer> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<GroupRecord> KEY_GROUP_PRIMARY = Internal.createUniqueKey(Group.GROUP, "KEY_group_PRIMARY", Group.GROUP.ID);
        public static final UniqueKey<MapGroupRoleRecord> KEY_MAP_GROUP_ROLE_PRIMARY = Internal.createUniqueKey(MapGroupRole.MAP_GROUP_ROLE, "KEY_map_group_role_PRIMARY", MapGroupRole.MAP_GROUP_ROLE.GROUP_ID, MapGroupRole.MAP_GROUP_ROLE.ROLE_ID);
        public static final UniqueKey<MapUserGroupRecord> KEY_MAP_USER_GROUP_PRIMARY = Internal.createUniqueKey(MapUserGroup.MAP_USER_GROUP, "KEY_map_user_group_PRIMARY", MapUserGroup.MAP_USER_GROUP.USER_ID, MapUserGroup.MAP_USER_GROUP.GROUP_ID);
        public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = Internal.createUniqueKey(Role.ROLE, "KEY_role_PRIMARY", Role.ROLE.ID);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.ID);
        public static final UniqueKey<UserRecord> KEY_USER_IDX_USER = Internal.createUniqueKey(User.USER, "KEY_user_idx_user", User.USER.USERNAME);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<MapGroupRoleRecord, GroupRecord> FK_MAP_GROUP_ROLE_GROUP = Internal.createForeignKey(com.endsound.trpg.security.jooq.Keys.KEY_GROUP_PRIMARY, MapGroupRole.MAP_GROUP_ROLE, "fk_map_group_role_group", MapGroupRole.MAP_GROUP_ROLE.GROUP_ID);
        public static final ForeignKey<MapGroupRoleRecord, RoleRecord> FK_MAP_GROUP_ROLE_ROLE = Internal.createForeignKey(com.endsound.trpg.security.jooq.Keys.KEY_ROLE_PRIMARY, MapGroupRole.MAP_GROUP_ROLE, "fk_map_group_role_role", MapGroupRole.MAP_GROUP_ROLE.ROLE_ID);
        public static final ForeignKey<MapUserGroupRecord, UserRecord> FK_MAP_USER_GROUP_USER = Internal.createForeignKey(com.endsound.trpg.security.jooq.Keys.KEY_USER_PRIMARY, MapUserGroup.MAP_USER_GROUP, "fk_map_user_group_user", MapUserGroup.MAP_USER_GROUP.USER_ID);
        public static final ForeignKey<MapUserGroupRecord, GroupRecord> FK_MAP_USER_GROUP_GROUP = Internal.createForeignKey(com.endsound.trpg.security.jooq.Keys.KEY_GROUP_PRIMARY, MapUserGroup.MAP_USER_GROUP, "fk_map_user_group_group", MapUserGroup.MAP_USER_GROUP.GROUP_ID);
    }
}
